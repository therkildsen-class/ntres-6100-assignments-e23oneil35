---
title: "assignment_5_ONEIL"
format: gfm
---

# Assignment 5: Data transformation and visualization - Part 2

First , load all the required packages with the following code. Install them if they are not installed yet.

```{r}
#| message: false
library(tidyverse)
library(knitr)
library(gapminder)
```

## Exercise 1. Trends in land value

This exercise uses a dataset that describes the trends in land value (`Land.Value`), among other variables, in different states in the US 1975-2013. The states are grouped into four different regions, under the variable `region`. This dataset was obtained from the Data Science Services of Harvard University.

```{r}
#| message: false
housing <- read_csv("https://raw.githubusercontent.com/nt246/NTRES-6100-data-science/master/datasets/landdata_states.csv")
housing |> 
  head() |> 
  kable()
```

<br>

#### 1.1 Washington DC was not assigned to a region in this dataset. According to the United States Census Bureau, however, DC is part of the South region. Here:

-   Change the region of DC to “South” (Hint: there are multiple ways to do this, but `mutate()` and `ifelse()` might be helpful)

-   Create a new tibble or regular dataframe consisting of this new updated `region` variable along with the original variables `State`, `Date` and `Land.Value` (and no others)

-   Pull out the records from DC in this new data frame. How many records are there from DC? Show the first 6 lines.

```{r}
housing |> 
  filter(State == "DC") |>
  mutate(region = ifelse(State == "DC", "South", region)) |> 
  select(region, State, Land.Value, Date) |> 
  head() |> 
  kable()
  
  
```

Answer: 153 records

#### 1.2 Generate a tibble/dataframe that summarizes the mean land value of each region at each time point and show its first 6 lines.

```{r}
#| message: false
housing |>
  group_by(region, Date) |> 
  summarise(mean_land_value = mean(Land.Value)) |> 
  arrange(region, Date) |> 
  head() |> 
  kable()
  
  
```

#### 1.3 Using the tibble/dataframe from 1.2, lot the trend in mean land value of each region through time.

```{r}
#| message: false
housing |>
  na.omit(Land.Value) |> 
  group_by(region, Date) |> 
  summarise(mean_land_value = mean(Land.Value)) |> 
  arrange(region, Date) |> 
  ggplot()+
  geom_line(aes(x = Date, y = mean_land_value, color = region))
```

## Exercise 2. Life expectancy and GDP per capita 1952-2007

This exercise uses the `gapminder` dataset from the `gapminder` package. It describes the life expectancy (`lifeExp`), GDP per capita (`gdpPercap`), and population (`pop`) of 142 countries from 1952 to 2007. These countries can be grouped into 5 continents. As a reminder, **reproduce the following plots exactly as shown**.

```{r}
gapminder |> 
  head() |> 
  kable()
```

#### 2.1 Use a scatterplot to explore the relationship between per capita GDP (`gdpPercap`) and life expectancy (`lifeExp`) in the year 2007.

```{r}
gapminder |> 
  filter(year == "2007") |> 
  ggplot()+
  geom_point(aes(x = gdpPercap, y =lifeExp))
  
```

#### 2.2 Add a smoothing line to the previous plot.

```{r}
#| message: false
gapminder |> 
  filter(year == "2007") |> 
  ggplot()+
  geom_point(aes(x = gdpPercap, y =lifeExp))+
  geom_smooth(aes(x = gdpPercap, y = lifeExp))
```

#### 2.3 Exclude Oceania from the previous plot, show each each continent in a different color, and fit a separate smoothing line to each continent to identify differences in this relationship between continents. Turn off the confidence intervals.

Note: only two Oceanian countries are included in this dataset, and `geom_smooth()` does not work with two data points, which is why they are excluded.

```{r}
#| message: false
gapminder |> 
  filter(year == 2007, continent %in% c("Africa", "Americas", "Asia", "Europe")) |> 
  ggplot() +
  geom_point(aes(x = gdpPercap, y = lifeExp, color = continent)) +
  geom_smooth(aes(x = gdpPercap, y = lifeExp, color = continent), se = FALSE)
```

#### 2.4 Use facetting to solve the same problem. Include confidence intervals in this plots. 

```{r}
#| message: false
gapminder |> 
  filter(year == 2007, continent %in% c("Africa", "Americas", "Asia", "Europe")) |> 
  ggplot() +
  geom_point(aes(x = gdpPercap, y = lifeExp, color = continent)) +
  geom_smooth(aes(x = gdpPercap, y = lifeExp, color = continent), se = TRUE)+
  facet_wrap(~ continent)
```

#### 2.5 Explore the trend in life expectancy through time in each continent. Color by continent. 

```{r}
gapminder |> 
  ggplot()+
  geom_line(aes(x = year, y = lifeExp, group = country, color = continent))+
  facet_wrap(~continent)
```

#### 2.6 From the previous plot, we see some abnormal trends in Asia and Africa, where the the life expectancy in some countries sharply dropped at certain time periods. Here, we look into what happened in Asia in more detail. First, create a new dataset by filtering only the Asian countries. Show the first 6 lines of this filtered dataset.

```{r}
gapminder |> 
  filter(continent == "Asia") |> 
  head() |> 
  kable()
```

#### 2.7  Using the filtered dataset, identify the countries that had abnormal trends in life expectancy by plotting, and discuss historical events possibly explaining these trends. (Hint: facet by country)

```{r}
#| message: false
gapminder |> 
  filter(continent %in% c("Asia", "Africa"))|>
  group_by(year) |> 
  mutate(mean_lifeExp = mean(lifeExp))|>
  ungroup() |> 
  filter(lifeExp < mean_lifeExp) |> 
  ggplot()+
  geom_line(aes(x = year, y = lifeExp))+
  geom_point(aes(x = year, y = lifeExp))+
  facet_wrap(~ country)
  
```

Answer: Rwanda and Cambodia both have sharp declines in life expectancy around the 1980s and 1990s. For Rwanda, my hypothesis for this decline is in the 1990s the country experienced an extreme genocide of the Tutsi. Additionally, similar events happened in Cambodia, with the Cambodian genocide taking place in the late 1970s and the effects of that seen in the 1908s.
